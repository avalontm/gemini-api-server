# ============================================
# CONFIGURACION DEL SERVIDOR
# ============================================
NODE_ENV=development
PORT=5000
CLIENT_URL=http://localhost:5173

# ============================================
# CONFIGURACION MONGODB
# ============================================
# MongoDB local
MONGODB_URI=mongodb://localhost:27017/gemini-api

# MongoDB Atlas (Cloud) - Descomentar y usar esto para base de datos en la nube
# MONGODB_URI=mongodb+srv://usuario:password@cluster.mongodb.net/gemini-api?retryWrites=true&w=majority

# ============================================
# AUTENTICACION JWT
# ============================================
# IMPORTANTE: Cambiar JWT_SECRET a una cadena aleatoria larga en produccion
# Generar con: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=cambiar_esto_a_una_cadena_muy_larga_y_aleatoria_en_produccion_minimo_32_caracteres
JWT_EXPIRE=7d
JWT_COOKIE_EXPIRE=7

# ============================================
# API DE GOOGLE GEMINI
# ============================================
# Obtener API key desde: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=tu_api_key_de_gemini_aqui

# MODELOS DISPONIBLES (Gemini 1.x fue retirado, usar 2.x):
# - gemini-2.0-flash-exp (experimental, más rápido)
# - gemini-2.5-flash (estable, recomendado para producción)
# - gemini-2.5-flash-lite (más económico)
# - gemini-2.5-pro (más potente)
GEMINI_MODEL=gemini-2.0-flash-exp

# ============================================
# CONFIGURACION DE SUBIDA DE ARCHIVOS
# ============================================
# Tamaño maximo de archivo en bytes (10MB = 10485760)
MAX_FILE_SIZE=10485760

# Tipos de archivo permitidos (tipos MIME separados por comas)
ALLOWED_IMAGE_TYPES=image/jpeg,image/png,image/webp,image/gif
ALLOWED_AUDIO_TYPES=audio/wav,audio/mpeg,audio/webm,audio/mp3
ALLOWED_PDF_TYPES=application/pdf

# Rutas de directorios de subida
UPLOAD_DIR_IMAGES=uploads/images
UPLOAD_DIR_AUDIO=uploads/audio
UPLOAD_DIR_PDFS=uploads/pdfs

# ============================================
# LIMITACION DE TASA (RATE LIMITING)
# ============================================
# Ventana de tiempo en milisegundos (15 minutos = 900000)
RATE_LIMIT_WINDOW_MS=900000

# Maximo de peticiones por ventana
RATE_LIMIT_MAX_REQUESTS=100

# Rate limit para endpoints de autenticacion (mas estricto)
AUTH_RATE_LIMIT_WINDOW_MS=900000
AUTH_RATE_LIMIT_MAX_REQUESTS=5

# ============================================
# CONFIGURACION DE LOGS
# ============================================
# Niveles de log: error, warn, info, http, verbose, debug, silly
LOG_LEVEL=info

# Rutas de archivos de log
LOG_FILE_ERROR=logs/error.log
LOG_FILE_COMBINED=logs/combined.log
LOG_FILE_ACCESS=logs/access.log

# ============================================
# SEGURIDAD
# ============================================
# Rondas de salt de Bcrypt (10-12 recomendado, mayor = mas seguro pero mas lento)
BCRYPT_ROUNDS=10

# Origenes permitidos para CORS (separados por comas)
CORS_ORIGIN=http://localhost:5173,http://localhost:3000

# ============================================
# DOCUMENTACION SWAGGER
# ============================================
SWAGGER_ENABLED=true
SWAGGER_PATH=/api/docs
SWAGGER_TITLE=Servidor API Gemini
SWAGGER_DESCRIPTION=Servidor API con integracion de Gemini AI, autenticacion de usuarios y MongoDB
SWAGGER_VERSION=1.0.0
SWAGGER_CONTACT_NAME=Tu Nombre
SWAGGER_CONTACT_EMAIL=tu.email@ejemplo.com

# ============================================
# CARACTERISTICAS OPCIONALES
# ============================================
# Habilitar/deshabilitar caracteristicas
ENABLE_REQUEST_LOGGING=true
ENABLE_COMPRESSION=true
ENABLE_HELMET=true

# Limpieza de archivos temporales (en horas)
TEMP_FILE_CLEANUP_HOURS=24

# Tiempo de espera de sesion (en minutos)
SESSION_TIMEOUT_MINUTES=60

# Longitud maxima del historial de conversacion
MAX_CONVERSATION_MESSAGES=100

# ============================================
# DESARROLLO / DEPURACION
# ============================================
# Mostrar mensajes de error detallados (solo en desarrollo)
SHOW_ERROR_STACK=true

# Habilitar modo debug para modulos especificos (separados por comas)
# Ejemplo: DEBUG=express:*,mongoose:*
DEBUG=

# ============================================
# NOTAS PARA PRODUCCION
# ============================================
# Antes de desplegar a produccion:
# 1. Establecer NODE_ENV=production
# 2. Generar un JWT_SECRET seguro (minimo 32 caracteres)
# 3. Usar URI de MongoDB Atlas en lugar de local
# 4. Establecer SHOW_ERROR_STACK=false
# 5. Actualizar CLIENT_URL al dominio de produccion
# 6. Configurar CORS_ORIGIN apropiado
# 7. Revisar y ajustar configuracion de RATE_LIMIT
# 8. Establecer LOG_LEVEL=warn o error
# 9. Habilitar todas las caracteristicas de seguridad
# 10. Usar variables de entorno o administrador de secretos (nunca subir .env al repositorio)